{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2","program":"/Users/kthakore/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","getrandom","--edition=2018","/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=f0d26ddc230706b8","-C","extra-filename=-f0d26ddc230706b8","--out-dir","/Users/kthakore/Documents/HOTG-ai/rune/proc_blocks/ohv_label/target/rls/debug/deps","-L","dependency=/Users/kthakore/Documents/HOTG-ai/rune/proc_blocks/ohv_label/target/rls/debug/deps","--extern","cfg_if=/Users/kthakore/Documents/HOTG-ai/rune/proc_blocks/ohv_label/target/rls/debug/deps/libcfg_if-083a2d925880fcf0.rmeta","--extern","libc=/Users/kthakore/Documents/HOTG-ai/rune/proc_blocks/ohv_label/target/rls/debug/deps/liblibc-ffbf5279cc004e9a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/kthakore/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/kthakore/Documents/HOTG-ai/rune/proc_blocks/ohv_label/target/rls/debug/deps/libgetrandom-f0d26ddc230706b8.rmeta"},"prelude":{"crate_id":{"name":"getrandom","disambiguator":[8721581932535453603,3673764355957887413]},"crate_root":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src","external_crates":[{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6552575213732972370,4857478896615676938]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9368402477752345001,16510660328274119402]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11979046517868875526,4248718423519269454]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","num":4,"id":{"name":"cfg_if","disambiguator":[10645903167683084943,7507394493178449852]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","num":5,"id":{"name":"std","disambiguator":[11263399830942021807,3354326593337767418]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","num":6,"id":{"name":"alloc","disambiguator":[5389889921351115945,6106823979989002352]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","num":7,"id":{"name":"libc","disambiguator":[18147862036360416397,10602909980673647499]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","num":8,"id":{"name":"unwind","disambiguator":[17806817554892560348,14725492049942068312]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","num":9,"id":{"name":"cfg_if","disambiguator":[764992845537178953,4386711774585810915]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","num":10,"id":{"name":"hashbrown","disambiguator":[6726354693825255046,1562708793232137953]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13802537688027037173,7865830378773675775]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[12634588057184811132,13278508508218871713]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","num":13,"id":{"name":"addr2line","disambiguator":[5580722395240640672,9810153816205700700]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","num":14,"id":{"name":"gimli","disambiguator":[451124501899321987,10206045407480806854]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","num":15,"id":{"name":"object","disambiguator":[4126279991979072403,11569616848169612015]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[1864816784851368348,2345431951253805751]}},{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/util_libc.rs","num":17,"id":{"name":"libc","disambiguator":[8317966286324383199,3113213192325495495]}}],"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":356,"byte_end":11500,"line_start":9,"line_end":236,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":65},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":8550,"byte_end":8555,"line_start":163,"line_end":163,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":356,"byte_end":11500,"line_start":9,"line_end":236,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":35},{"krate":0,"index":55},{"krate":0,"index":63},{"krate":0,"index":80},{"krate":0,"index":98},{"krate":0,"index":133},{"krate":0,"index":64}],"decl_id":null,"docs":" Interface to the operating system's random number generator.","sig":null,"attributes":[{"value":"/ Interface to the operating system's random number generator.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":356,"byte_end":420,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":421,"byte_end":424,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Supported targets","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":425,"byte_end":448,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":449,"byte_end":452,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ | Target            | Target Triple      | Implementation","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":453,"byte_end":514,"line_start":13,"line_end":13,"column_start":1,"column_end":62}},{"value":"/ | ----------------- | ------------------ | --------------","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":515,"byte_end":576,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/ | Linux, Android    | `*‑linux‑*`        | [`getrandom`][1] system call if available, otherwise [`/dev/urandom`][2] after successfully polling `/dev/random` |","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":577,"byte_end":743,"line_start":15,"line_end":15,"column_start":1,"column_end":163}},{"value":"/ | Windows           | `*‑windows‑*`      | [`BCryptGenRandom`][3] |","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":744,"byte_end":819,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ | macOS             | `*‑apple‑darwin`   | [`getentropy()`][19] if available, otherwise [`/dev/random`][20] (identical to `/dev/urandom`)","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":820,"byte_end":965,"line_start":17,"line_end":17,"column_start":1,"column_end":142}},{"value":"/ | iOS               | `*‑apple‑ios`      | [`SecRandomCopyBytes`][4]","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":966,"byte_end":1042,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ | FreeBSD           | `*‑freebsd`        | [`getrandom()`][21] if available, otherwise [`kern.arandom`][5]","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":1043,"byte_end":1155,"line_start":19,"line_end":19,"column_start":1,"column_end":111}},{"value":"/ | OpenBSD           | `*‑openbsd`        | [`getentropy`][6]","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":1156,"byte_end":1222,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ | NetBSD            | `*‑netbsd`         | [`kern.arandom`][7]","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":1223,"byte_end":1291,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ | Dragonfly BSD     | `*‑dragonfly`      | [`/dev/random`][8]","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":1292,"byte_end":1360,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/ | Solaris, illumos  | `*‑solaris`, `*‑illumos` | [`getrandom()`][9] if available, otherwise [`/dev/random`][10]","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":1361,"byte_end":1480,"line_start":23,"line_end":23,"column_start":1,"column_end":116}},{"value":"/ | Fuchsia OS        | `*‑fuchsia`        | [`cprng_draw`][11]","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":1481,"byte_end":1549,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/ | Redox             | `*‑redox`          | [`rand:`][12]","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":1550,"byte_end":1612,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/ | Haiku             | `*‑haiku`          | `/dev/random` (identical to `/dev/urandom`)","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":1613,"byte_end":1705,"line_start":26,"line_end":26,"column_start":1,"column_end":91}},{"value":"/ | SGX               | `x86_64‑*‑sgx`     | [RDRAND][18]","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":1706,"byte_end":1769,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ | VxWorks           | `*‑wrs‑vxworks‑*`  | `randABytes` after checking entropy pool initialization with `randSecure`","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":1770,"byte_end":1896,"line_start":28,"line_end":28,"column_start":1,"column_end":121}},{"value":"/ | Emscripten        | `*‑emscripten`     | `/dev/random` (identical to `/dev/urandom`)","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":1897,"byte_end":1989,"line_start":29,"line_end":29,"column_start":1,"column_end":91}},{"value":"/ | WASI              | `wasm32‑wasi`      | [`__wasi_random_get`][17]","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":1990,"byte_end":2064,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ | Web Browser       | `wasm32‑*‑unknown` | [`Crypto.getRandomValues()`][14], see [WebAssembly support][16]","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2065,"byte_end":2180,"line_start":31,"line_end":31,"column_start":1,"column_end":111}},{"value":"/ | Node.js           | `wasm32‑*‑unknown` | [`crypto.randomBytes`][15], see [WebAssembly support][16]","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2181,"byte_end":2289,"line_start":32,"line_end":32,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2290,"byte_end":2293,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ There is no blanket implementation on `unix` targets that reads from","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2294,"byte_end":2366,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ `/dev/urandom`. This ensures all supported targets are using the recommended","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2367,"byte_end":2447,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ interface and respect maximum buffer sizes.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2448,"byte_end":2495,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2496,"byte_end":2499,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Pull Requests that add support for new targets to `getrandom` are always welcome.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2500,"byte_end":2585,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2586,"byte_end":2589,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Unsupported targets","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2590,"byte_end":2616,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2617,"byte_end":2620,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ By default, `getrandom` will not compile on unsupported targets, but certain","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2621,"byte_end":2701,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ features allow a user to select a \"fallback\" implementation if no supported","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2702,"byte_end":2781,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ implementation exists.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2782,"byte_end":2808,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2809,"byte_end":2812,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ All of the below mechanisms only affect unsupported","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2813,"byte_end":2868,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/ targets. Supported targets will _always_ use their supported implementations.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2869,"byte_end":2950,"line_start":47,"line_end":47,"column_start":1,"column_end":82}},{"value":"/ This prevents a crate from overriding a secure source of randomness","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":2951,"byte_end":3022,"line_start":48,"line_end":48,"column_start":1,"column_end":72}},{"value":"/ (either accidentally or intentionally).","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3023,"byte_end":3066,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3067,"byte_end":3070,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ### RDRAND on x86","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3071,"byte_end":3092,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3093,"byte_end":3096,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ *If the `\"rdrand\"` Cargo feature is enabled*, `getrandom` will fallback to using","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3097,"byte_end":3181,"line_start":53,"line_end":53,"column_start":1,"column_end":85}},{"value":"/ the [`RDRAND`][18] instruction to get randomness on `no_std` `x86`/`x86_64`","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3182,"byte_end":3261,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/ targets. This feature has no effect on other CPU architectures.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3262,"byte_end":3329,"line_start":55,"line_end":55,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3330,"byte_end":3333,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ### WebAssembly support","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3334,"byte_end":3361,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3362,"byte_end":3365,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This crate fully supports the","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3366,"byte_end":3399,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/ [`wasm32-wasi`](https://github.com/CraneStation/wasi) and","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3400,"byte_end":3461,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/ [`wasm32-unknown-emscripten`](https://www.hellorust.com/setup/emscripten/)","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3462,"byte_end":3540,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/ targets. However, the `wasm32-unknown-unknown` target is not automatically","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3541,"byte_end":3619,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ supported since, from the target name alone, we cannot deduce which","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3620,"byte_end":3691,"line_start":63,"line_end":63,"column_start":1,"column_end":72}},{"value":"/ JavaScript interface is in use (or if JavaScript is available at all).","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3692,"byte_end":3766,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3767,"byte_end":3770,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Instead, *if the `\"js\"` Cargo feature is enabled*, this crate will assume","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3771,"byte_end":3848,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ that you are building for an environment containing JavaScript, and will","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3849,"byte_end":3925,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/ call the appropriate methods. Both web browser (main window and Web Workers)","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":3926,"byte_end":4006,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ and Node.js environments are supported, invoking the methods","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4007,"byte_end":4071,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"/ [described above](#supported-targets) using the","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4072,"byte_end":4123,"line_start":70,"line_end":70,"column_start":1,"column_end":52}},{"value":"/ [wasm-bindgen](https://github.com/rust-lang/rust-bindgen) toolchain.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4124,"byte_end":4196,"line_start":71,"line_end":71,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4197,"byte_end":4200,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This feature has no effect on targets other than `wasm32-unknown-unknown`.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4201,"byte_end":4279,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4280,"byte_end":4283,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ### Custom implementations","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4284,"byte_end":4314,"line_start":75,"line_end":75,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4315,"byte_end":4318,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ The [`register_custom_getrandom!`] macro allows a user to mark their own","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4319,"byte_end":4395,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/ function as the backing implementation for [`getrandom`]. See the macro's","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4396,"byte_end":4473,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ documentation for more information about writing and registering your own","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4474,"byte_end":4551,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ custom implementations.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4552,"byte_end":4579,"line_start":80,"line_end":80,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4580,"byte_end":4583,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Note that registering a custom implementation only has an effect on targets","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4584,"byte_end":4663,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/ that would otherwise not compile. Any supported targets (including those","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4664,"byte_end":4740,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"/ using `\"rdrand\"` and `\"js\"` Cargo features) continue using their normal","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4741,"byte_end":4816,"line_start":84,"line_end":84,"column_start":1,"column_end":76}},{"value":"/ implementations even if a function is registered.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4817,"byte_end":4870,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4871,"byte_end":4874,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ### Indirect Dependencies","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4875,"byte_end":4904,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4905,"byte_end":4908,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ If `getrandom` is not a direct dependency of your crate, you can still","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4909,"byte_end":4983,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ enable any of the above fallback behaviors by enabling the relevant","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":4984,"byte_end":5055,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/ feature in your root crate's `Cargo.toml`:","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5056,"byte_end":5102,"line_start":91,"line_end":91,"column_start":1,"column_end":47}},{"value":"/ ```toml","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5103,"byte_end":5114,"line_start":92,"line_end":92,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5115,"byte_end":5133,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/ getrandom = { version = \"0.2\", features = [\"js\"] }","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5134,"byte_end":5188,"line_start":94,"line_end":94,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5189,"byte_end":5196,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5197,"byte_end":5200,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ## Early boot","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5201,"byte_end":5218,"line_start":97,"line_end":97,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5219,"byte_end":5222,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Sometimes, early in the boot process, the OS has not collected enough","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5223,"byte_end":5296,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/ entropy to securely seed its RNG. This is especially common on virtual","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5297,"byte_end":5371,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ machines, where standard \"random\" events are hard to come by.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5372,"byte_end":5437,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5438,"byte_end":5441,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Some operating system interfaces always block until the RNG is securely","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5442,"byte_end":5517,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ seeded. This can take anywhere from a few seconds to more than a minute.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5518,"byte_end":5594,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ A few (Linux, NetBSD and Solaris) offer a choice between blocking and","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5595,"byte_end":5668,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ getting an error; in these cases, we always choose to block.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5669,"byte_end":5733,"line_start":106,"line_end":106,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5734,"byte_end":5737,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ On Linux (when the `getrandom` system call is not available), reading from","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5738,"byte_end":5816,"line_start":108,"line_end":108,"column_start":1,"column_end":79}},{"value":"/ `/dev/urandom` never blocks, even when the OS hasn't collected enough","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5817,"byte_end":5890,"line_start":109,"line_end":109,"column_start":1,"column_end":74}},{"value":"/ entropy yet. To avoid returning low-entropy bytes, we first poll","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5891,"byte_end":5959,"line_start":110,"line_end":110,"column_start":1,"column_end":69}},{"value":"/ `/dev/random` and only switch to `/dev/urandom` once this has succeeded.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":5960,"byte_end":6036,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6037,"byte_end":6040,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ## Error handling","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6041,"byte_end":6062,"line_start":113,"line_end":113,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6063,"byte_end":6066,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ We always choose failure over returning insecure \"random\" bytes. In general,","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6067,"byte_end":6147,"line_start":115,"line_end":115,"column_start":1,"column_end":81}},{"value":"/ on supported platforms, failure is highly unlikely, though not impossible.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6148,"byte_end":6226,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/ If an error does occur, then it is likely that it will occur on every call to","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6227,"byte_end":6308,"line_start":117,"line_end":117,"column_start":1,"column_end":82}},{"value":"/ `getrandom`, hence after the first successful call one can be reasonably","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6309,"byte_end":6385,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ confident that no errors will occur.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6386,"byte_end":6426,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6427,"byte_end":6430,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [1]: http://man7.org/linux/man-pages/man2/getrandom.2.html","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6431,"byte_end":6493,"line_start":121,"line_end":121,"column_start":1,"column_end":63}},{"value":"/ [2]: http://man7.org/linux/man-pages/man4/urandom.4.html","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6494,"byte_end":6554,"line_start":122,"line_end":122,"column_start":1,"column_end":61}},{"value":"/ [3]: https://docs.microsoft.com/en-us/windows/win32/api/bcrypt/nf-bcrypt-bcryptgenrandom","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6555,"byte_end":6647,"line_start":123,"line_end":123,"column_start":1,"column_end":93}},{"value":"/ [4]: https://developer.apple.com/documentation/security/1399291-secrandomcopybytes?language=objc","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6648,"byte_end":6748,"line_start":124,"line_end":124,"column_start":1,"column_end":101}},{"value":"/ [5]: https://www.freebsd.org/cgi/man.cgi?query=random&sektion=4","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6749,"byte_end":6816,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"/ [6]: https://man.openbsd.org/getentropy.2","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6817,"byte_end":6862,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ [7]: https://netbsd.gw.com/cgi-bin/man-cgi?sysctl+7+NetBSD-8.0","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6863,"byte_end":6929,"line_start":127,"line_end":127,"column_start":1,"column_end":67}},{"value":"/ [8]: https://leaf.dragonflybsd.org/cgi/web-man?command=random&section=4","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":6930,"byte_end":7005,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ [9]: https://docs.oracle.com/cd/E88353_01/html/E37841/getrandom-2.html","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":7006,"byte_end":7080,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"/ [10]: https://docs.oracle.com/cd/E86824_01/html/E54777/random-7d.html","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":7081,"byte_end":7154,"line_start":130,"line_end":130,"column_start":1,"column_end":74}},{"value":"/ [11]: https://fuchsia.dev/fuchsia-src/zircon/syscalls/cprng_draw","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":7155,"byte_end":7223,"line_start":131,"line_end":131,"column_start":1,"column_end":69}},{"value":"/ [12]: https://github.com/redox-os/randd/blob/master/src/main.rs","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":7224,"byte_end":7291,"line_start":132,"line_end":132,"column_start":1,"column_end":68}},{"value":"/ [14]: https://www.w3.org/TR/WebCryptoAPI/#Crypto-method-getRandomValues","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":7292,"byte_end":7367,"line_start":133,"line_end":133,"column_start":1,"column_end":76}},{"value":"/ [15]: https://nodejs.org/api/crypto.html#crypto_crypto_randombytes_size_callback","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":7368,"byte_end":7452,"line_start":134,"line_end":134,"column_start":1,"column_end":85}},{"value":"/ [16]: #webassembly-support","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":7453,"byte_end":7483,"line_start":135,"line_end":135,"column_start":1,"column_end":31}},{"value":"/ [17]: https://github.com/WebAssembly/WASI/blob/master/design/WASI-core.md#__wasi_random_get","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":7484,"byte_end":7579,"line_start":136,"line_end":136,"column_start":1,"column_end":96}},{"value":"/ [18]: https://software.intel.com/en-us/articles/intel-digital-random-number-generator-drng-software-implementation-guide","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":7580,"byte_end":7704,"line_start":137,"line_end":137,"column_start":1,"column_end":125}},{"value":"/ [19]: https://www.unix.com/man-page/mojave/2/getentropy/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":7705,"byte_end":7765,"line_start":138,"line_end":138,"column_start":1,"column_end":61}},{"value":"/ [20]: https://www.unix.com/man-page/mojave/4/random/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":7766,"byte_end":7822,"line_start":139,"line_end":139,"column_start":1,"column_end":57}},{"value":"/ [21]: https://www.freebsd.org/cgi/man.cgi?query=getrandom&manpath=FreeBSD+12.0-stable","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":7823,"byte_end":7912,"line_start":140,"line_end":140,"column_start":1,"column_end":90}},{"value":"no_std","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":8124,"byte_end":8134,"line_start":147,"line_end":147,"column_start":1,"column_end":11}},{"value":"warn(rust_2018_idioms, unused_lifetimes, missing_docs)","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":8135,"byte_end":8193,"line_start":148,"line_end":148,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":65},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":12744,"byte_end":12749,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" A small and `no_std` compatible error type","sig":null,"attributes":[{"value":"/ A small and `no_std` compatible error type","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":11892,"byte_end":11938,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":11939,"byte_end":11942,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`Error::raw_os_error()`] will indicate if the error is from the OS, and","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":11943,"byte_end":12023,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ if so, which error code the OS gave the application. If such an error is","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":12024,"byte_end":12100,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ encountered, please consult with your system documentation.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":12101,"byte_end":12164,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":12165,"byte_end":12168,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Internally this type is a NonZeroU32, with certain values reserved for","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":12169,"byte_end":12243,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ certain purposes, see [`Error::INTERNAL_START`] and [`Error::CUSTOM_START`].","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":12244,"byte_end":12324,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":12325,"byte_end":12328,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ *If this crate's `\"std\"` Cargo feature is enabled*, then:","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":12329,"byte_end":12390,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ - [`getrandom::Error`][Error] implements","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":12391,"byte_end":12435,"line_start":20,"line_end":20,"column_start":1,"column_end":45}},{"value":"/   [`std::error::Error`](https://doc.rust-lang.org/std/error/trait.Error.html)","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":12436,"byte_end":12517,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/ - [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) implements","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":12518,"byte_end":12605,"line_start":22,"line_end":22,"column_start":1,"column_end":88}},{"value":"/   [`From<getrandom::Error>`](https://doc.rust-lang.org/std/convert/trait.From.html).","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":12606,"byte_end":12694,"line_start":23,"line_end":23,"column_start":1,"column_end":89}}]},{"kind":"Const","id":{"krate":0,"index":11},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13085,"byte_end":13096,"line_start":35,"line_end":35,"column_start":15,"column_end":26},"name":"UNSUPPORTED","qualname":"::error::Error::UNSUPPORTED","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" This target/platform is not supported by `getrandom`.\n","sig":null,"attributes":[{"value":"/ This target/platform is not supported by `getrandom`.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13013,"byte_end":13070,"line_start":34,"line_end":34,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":12},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13208,"byte_end":13226,"line_start":37,"line_end":37,"column_start":15,"column_end":33},"name":"ERRNO_NOT_POSITIVE","qualname":"::error::Error::ERRNO_NOT_POSITIVE","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" The platform-specific `errno` returned a non-positive value.\n","sig":null,"attributes":[{"value":"/ The platform-specific `errno` returned a non-positive value.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13129,"byte_end":13193,"line_start":36,"line_end":36,"column_start":5,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":13},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13399,"byte_end":13413,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"name":"IOS_SEC_RANDOM","qualname":"::error::Error::IOS_SEC_RANDOM","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Call to iOS [`SecRandomCopyBytes`](https://developer.apple.com/documentation/security/1399291-secrandomcopybytes) failed.\n","sig":null,"attributes":[{"value":"/ Call to iOS [`SecRandomCopyBytes`](https://developer.apple.com/documentation/security/1399291-secrandomcopybytes) failed.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13259,"byte_end":13384,"line_start":38,"line_end":38,"column_start":5,"column_end":130}}]},{"kind":"Const","id":{"krate":0,"index":14},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13591,"byte_end":13613,"line_start":41,"line_end":41,"column_start":15,"column_end":37},"name":"WINDOWS_RTL_GEN_RANDOM","qualname":"::error::Error::WINDOWS_RTL_GEN_RANDOM","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Call to Windows [`RtlGenRandom`](https://docs.microsoft.com/en-us/windows/win32/api/ntsecapi/nf-ntsecapi-rtlgenrandom) failed.\n","sig":null,"attributes":[{"value":"/ Call to Windows [`RtlGenRandom`](https://docs.microsoft.com/en-us/windows/win32/api/ntsecapi/nf-ntsecapi-rtlgenrandom) failed.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13446,"byte_end":13576,"line_start":40,"line_end":40,"column_start":5,"column_end":135}}]},{"kind":"Const","id":{"krate":0,"index":15},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13715,"byte_end":13728,"line_start":43,"line_end":43,"column_start":15,"column_end":28},"name":"FAILED_RDRAND","qualname":"::error::Error::FAILED_RDRAND","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" RDRAND instruction failed due to a hardware issue.\n","sig":null,"attributes":[{"value":"/ RDRAND instruction failed due to a hardware issue.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13646,"byte_end":13700,"line_start":42,"line_end":42,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":16},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13826,"byte_end":13835,"line_start":45,"line_end":45,"column_start":15,"column_end":24},"name":"NO_RDRAND","qualname":"::error::Error::NO_RDRAND","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" RDRAND instruction unsupported on this target.\n","sig":null,"attributes":[{"value":"/ RDRAND instruction unsupported on this target.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13761,"byte_end":13811,"line_start":44,"line_end":44,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":17},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13939,"byte_end":13949,"line_start":47,"line_end":47,"column_start":15,"column_end":25},"name":"WEB_CRYPTO","qualname":"::error::Error::WEB_CRYPTO","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" The browser does not have support for `self.crypto`.\n","sig":null,"attributes":[{"value":"/ The browser does not have support for `self.crypto`.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13868,"byte_end":13924,"line_start":46,"line_end":46,"column_start":5,"column_end":61}}]},{"kind":"Const","id":{"krate":0,"index":18},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":14064,"byte_end":14085,"line_start":49,"line_end":49,"column_start":15,"column_end":36},"name":"WEB_GET_RANDOM_VALUES","qualname":"::error::Error::WEB_GET_RANDOM_VALUES","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" The browser does not have support for `crypto.getRandomValues`.\n","sig":null,"attributes":[{"value":"/ The browser does not have support for `crypto.getRandomValues`.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13982,"byte_end":14049,"line_start":48,"line_end":48,"column_start":5,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":19},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":14226,"byte_end":14245,"line_start":51,"line_end":51,"column_start":15,"column_end":34},"name":"VXWORKS_RAND_SECURE","qualname":"::error::Error::VXWORKS_RAND_SECURE","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" On VxWorks, call to `randSecure` failed (random number generator is not yet initialized).\n","sig":null,"attributes":[{"value":"/ On VxWorks, call to `randSecure` failed (random number generator is not yet initialized).","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":14118,"byte_end":14211,"line_start":50,"line_end":50,"column_start":5,"column_end":98}}]},{"kind":"Const","id":{"krate":0,"index":20},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":14351,"byte_end":14362,"line_start":53,"line_end":53,"column_start":15,"column_end":26},"name":"NODE_CRYPTO","qualname":"::error::Error::NODE_CRYPTO","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" NodeJS does not have support for the `crypto` module.\n","sig":null,"attributes":[{"value":"/ NodeJS does not have support for the `crypto` module.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":14279,"byte_end":14336,"line_start":52,"line_end":52,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":21},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":14472,"byte_end":14493,"line_start":55,"line_end":55,"column_start":15,"column_end":36},"name":"NODE_RANDOM_FILL_SYNC","qualname":"::error::Error::NODE_RANDOM_FILL_SYNC","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" NodeJS does not have support for `crypto.randomFillSync`.\n","sig":null,"attributes":[{"value":"/ NodeJS does not have support for `crypto.randomFillSync`.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":14396,"byte_end":14457,"line_start":54,"line_end":54,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":22},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":14756,"byte_end":14770,"line_start":60,"line_end":60,"column_start":15,"column_end":29},"name":"INTERNAL_START","qualname":"::error::Error::INTERNAL_START","value":"u32","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Codes below this point represent OS Errors (i.e. positive i32 values).\n Codes at or above this point, but below [`Error::CUSTOM_START`] are\n reserved for use by the `rand` and `getrandom` crates.\n","sig":null,"attributes":[{"value":"/ Codes below this point represent OS Errors (i.e. positive i32 values).","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":14528,"byte_end":14602,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ Codes at or above this point, but below [`Error::CUSTOM_START`] are","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":14607,"byte_end":14678,"line_start":58,"line_end":58,"column_start":5,"column_end":76}},{"value":"/ reserved for use by the `rand` and `getrandom` crates.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":14683,"byte_end":14741,"line_start":59,"line_end":59,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":23},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":14903,"byte_end":14915,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"CUSTOM_START","qualname":"::error::Error::CUSTOM_START","value":"u32","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Codes at or above this point can be used by users to define their own\n custom errors.\n","sig":null,"attributes":[{"value":"/ Codes at or above this point can be used by users to define their own","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":14792,"byte_end":14865,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ custom errors.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":14870,"byte_end":14888,"line_start":63,"line_end":63,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":15381,"byte_end":15393,"line_start":74,"line_end":74,"column_start":12,"column_end":24},"name":"raw_os_error","qualname":"<Error>::raw_os_error","value":"pub fn raw_os_error(Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Extract the raw OS error code (if this error came from the OS)","sig":null,"attributes":[{"value":"/ Extract the raw OS error code (if this error came from the OS)","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":14951,"byte_end":15017,"line_start":66,"line_end":66,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":15022,"byte_end":15025,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`std::io::Error::raw_os_error()`][1], except","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":15030,"byte_end":15107,"line_start":68,"line_end":68,"column_start":5,"column_end":82}},{"value":"/ that it works in `no_std` contexts. If this method returns `None`, the","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":15112,"byte_end":15186,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ error value can still be formatted via the `Display` implementation.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":15191,"byte_end":15263,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":15268,"byte_end":15271,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [1]: https://doc.rust-lang.org/std/io/struct.Error.html#method.raw_os_error","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":15276,"byte_end":15355,"line_start":72,"line_end":72,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":15360,"byte_end":15369,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":15766,"byte_end":15770,"line_start":87,"line_end":87,"column_start":18,"column_end":22},"name":"code","qualname":"<Error>::code","value":"pub const fn code(Self) -> NonZeroU32","parent":null,"children":[],"decl_id":null,"docs":" Extract the bare error code.","sig":null,"attributes":[{"value":"/ Extract the bare error code.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":15559,"byte_end":15591,"line_start":82,"line_end":82,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":15596,"byte_end":15599,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This code can either come from the underlying OS, or be a custom error.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":15604,"byte_end":15679,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ Use [`Error::raw_os_error()`] to disambiguate.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":15684,"byte_end":15734,"line_start":85,"line_end":85,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":15739,"byte_end":15748,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":11364,"byte_end":11373,"line_start":231,"line_end":231,"column_start":8,"column_end":17},"name":"getrandom","qualname":"::getrandom","value":"pub fn getrandom(&mut [u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Fill `dest` with random bytes from the system's preferred random number\n source.","sig":null,"attributes":[{"value":"/ Fill `dest` with random bytes from the system's preferred random number","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":10684,"byte_end":10759,"line_start":218,"line_end":218,"column_start":1,"column_end":76}},{"value":"/ source.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":10760,"byte_end":10771,"line_start":219,"line_end":219,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":10772,"byte_end":10775,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ This function returns an error on any failure, including partial reads. We","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":10776,"byte_end":10854,"line_start":221,"line_end":221,"column_start":1,"column_end":79}},{"value":"/ make no guarantees regarding the contents of `dest` on error. If `dest` is","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":10855,"byte_end":10933,"line_start":222,"line_end":222,"column_start":1,"column_end":79}},{"value":"/ empty, `getrandom` immediately returns success, making no calls to the","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":10934,"byte_end":11008,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/ underlying operating system.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":11009,"byte_end":11041,"line_start":224,"line_end":224,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":11042,"byte_end":11045,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ Blocking is possible, at least during early boot; see module documentation.","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":11046,"byte_end":11125,"line_start":226,"line_end":226,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":11126,"byte_end":11129,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ In general, `getrandom` will be fast enough for interactive usage, though","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":11130,"byte_end":11207,"line_start":228,"line_end":228,"column_start":1,"column_end":78}},{"value":"/ significantly slower than a user-space CSPRNG; for the latter consider","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":11208,"byte_end":11282,"line_start":229,"line_end":229,"column_start":1,"column_end":75}},{"value":"/ [`rand::thread_rng`](https://docs.rs/rand/*/rand/fn.thread_rng.html).","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/lib.rs","byte_start":11283,"byte_end":11356,"line_start":230,"line_end":230,"column_start":1,"column_end":74}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13001,"byte_end":13006,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":16617,"byte_end":16622,"line_start":116,"line_end":116,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":17277,"byte_end":17282,"line_start":135,"line_end":135,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":17801,"byte_end":17806,"line_start":151,"line_end":151,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/util.rs","byte_start":20437,"byte_end":20446,"line_start":31,"line_end":31,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/util.rs","byte_start":21277,"byte_end":21285,"line_start":56,"line_end":56,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","byte_start":21993,"byte_end":21998,"line_start":15,"line_end":15,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","byte_start":22243,"byte_end":22248,"line_start":24,"line_end":24,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/util_libc.rs","byte_start":9055579,"byte_end":9055583,"line_start":80,"line_end":80,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/use_file.rs","byte_start":9060537,"byte_end":9060542,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/use_file.rs","byte_start":9060915,"byte_end":9060920,"line_start":133,"line_end":133,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/use_file.rs","byte_start":9060985,"byte_end":9060994,"line_start":137,"line_end":137,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":13001,"byte_end":13006,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":65},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":16617,"byte_end":16622,"line_start":116,"line_end":116,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":65},"to":{"krate":1,"index":6917}},{"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":17277,"byte_end":17282,"line_start":135,"line_end":135,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":65},"to":{"krate":1,"index":6922}},{"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error.rs","byte_start":17801,"byte_end":17806,"line_start":151,"line_end":151,"column_start":27,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":65},"to":{"krate":1,"index":1996}},{"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/util.rs","byte_start":20437,"byte_end":20446,"line_start":31,"line_end":31,"column_start":6,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/util.rs","byte_start":21277,"byte_end":21285,"line_start":56,"line_end":56,"column_start":6,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":47},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","byte_start":21993,"byte_end":21998,"line_start":15,"line_end":15,"column_start":26,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":2755},"to":{"krate":1,"index":1996}},{"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/error_impls.rs","byte_start":22243,"byte_end":22248,"line_start":24,"line_end":24,"column_start":28,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":65},"to":{"krate":5,"index":1747}},{"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/util_libc.rs","byte_start":9055579,"byte_end":9055583,"line_start":80,"line_end":80,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/use_file.rs","byte_start":9060537,"byte_end":9060542,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/use_file.rs","byte_start":9060915,"byte_end":9060920,"line_start":133,"line_end":133,"column_start":22,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":2090}},{"span":{"file_name":"/Users/kthakore/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.2/src/use_file.rs","byte_start":9060985,"byte_end":9060994,"line_start":137,"line_end":137,"column_start":27,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":126},"to":{"krate":1,"index":2302}}]}