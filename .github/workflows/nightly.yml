name: Nightly

on:
  schedule:
  - cron: '0 0 * * *' # midnight UTC
  workflow_dispatch:

env:
  # Only run this action if it was scheduled and there were commits within the
  # last X hours/days
  ACTIVITY_THRESHOLD: "24 hours"

jobs:
  # Check to see whether there have been any commits since the last run,
  # letting us skip subsequent steps if there haven't.
  # https://github.community/t/trigger-action-on-schedule-only-if-there-are-changes-to-the-branch/17887
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v2
      - name: print latest_commit
        run: echo ${{ github.sha }}
      - id: should_run
        continue-on-error: true
        name: Check for changes within the activity threshold
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="${{ env.ACTIVITY_THRESHOLD }}" ${{ github.sha }}) && echo "::set-output name=should_run::false"

  build:
    name: Build release artifacts for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    strategy:
      matrix:
        include:
          - name: linux
            os: ubuntu-latest
            artifact_name: "target/rune.*.zip"
            asset_name: rune-linux
          # - name: windows
          #   os: windows-latest
          #   artifact_name: "target/rune.*.zip"
          #   asset_name: rune-windows
          - name: macos
            os: macos-latest
            artifact_name: "target/rune.*.zip"
            asset_name: rune-macos
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ github.workflow }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup Rust Toolchain
        run: |
          rustup show
          rustc --version --verbose
          cargo --version --verbose
      - name: Install wasm32 target
        run: rustup target add wasm32-unknown-unknown x86_64-unknown-linux-musl
      - name: Build
        run: cargo xtask dist
        env:
          RUST_LOG: info,xtask=debug
      - name: Upload binaries to release
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.artifact_name }}

  create-release:
    name: Create Nightly Release
    runs-on: ubuntu-latest
    needs:
      - build
      - check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Fetch Pre-Compiled Binaries
        uses: actions/download-artifact@v2
        with:
          path: nightly
      - name: Move all up
        run: mv nightly/**/*.zip nightly/
      - name: Print Artifacts
        run: ls -la nightly
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "nightly"
          prerelease: true
          title: "Nightly Release"
          files: |
            nightly/*.zip
