name: Continuous integration

on:
  push:
    branches:
      - master
  pull_request:

env:
  SCCACHE_VERSION: v0.2.15
  SCCACHE_CACHE_SIZE: 40G
  # SCCACHE_BUCKET: ${{ secrets.SCCACHE_BUCKET }}
  # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  check:
    name: Compile and Test
    strategy:
      matrix:
        os:
          - [Linux, self-hosted]
          - macos-latest
          # Note: we need to use pre-compiled TensorFlow Lite binaries on
          # Windows, so ignore the Windows build for now
          #- windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Update Rustup
        run: |
          # We need to update rustup because the mac version is out of date and
          # self-update is disabled. https://github.com/rust-lang/rustup/issues/2766
          curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain none -y
        if: runner.os == 'macOS'
      - uses: maxim-lobanov/setup-xcode@v1
        if: runner.os == 'macOS'
        with:
          xcode-version: latest-stable
      - uses: actions/setup-python@v2
        if: runner.os == 'macOS'
        with:
          python-version: "3.6.x"
      - name: Install Numpy
        run: pip3 install numpy
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: Setup Rust
        run: rustup show
      - name: Install sccache
        uses: actions-rs/install@v0.1
        with:
          crate: sccache
      - name: Clear Sccache Stats
        run: sccache --zero-stats
      - name: Override RUSTC_WRAPPER
        run: echo "RUSTC_WRAPPER=$(command -v sccache)" >> $GITHUB_ENV
      - name: Install bindgen
        uses: actions-rs/install@v0.1
        with:
          crate: bindgen
      - name: Type Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --verbose --locked --all-features
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --verbose --locked --all-features
      - name: Unit Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --verbose --locked --all-features
      - name: Integration Tests
        uses: actions-rs/cargo@v1
        with:
          command: integration-tests
      - name: Cargo.toml Sanity Checks
        uses: actions-rs/cargo@v1
        with:
          command: xtask
          args: check-manifests
      - name: Print Sccache Stats
        run: sccache --show-stats

  api-docs:
    name: Generate API Docs
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/setup-python@v2
        with:
          python-version: "3.6"
      - name: Update Rustup
        run: |
          # We need to update rustup because the mac version is out of date and
          # self-update is disabled. https://github.com/rust-lang/rustup/issues/2766
          curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain none -y
        if: runner.os == 'macOS'
      - name: Setup Rust
        run: rustup show
      - name: Install sccache
        uses: actions-rs/install@v0.1
        with:
          crate: sccache
      - name: Override RUSTC_WRAPPER
        run: echo "RUSTC_WRAPPER=$(command -v sccache)" >> $GITHUB_ENV
      - name: Generate API Docs
        id: first_try
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: doc
          args: --workspace --verbose --locked
      # Sometimes generating docs on GitHub actions will spuriously fail with
      # a random "file not found" error - possibly due to caching - so we try
      # twice before failing the build.
      #
      #   error: failed to remove file `/home/runner/work/rune/rune/target/doc/rune/constant.DEFAULT_RUST_LOG.html`
      #   Caused by:
      #      No such file or directory (os error 2)
      - name: Generate API Docs (second attempt)
        run: |
          cargo clean --doc
          cargo doc --workspace --verbose --locked
        if: ${{ steps.first_try.outcome == 'failure' }}
      - name: Create the Output Directory
        run: |
          mkdir -p public
          cp -r target/doc public/crate-docs
      - name: Automatically redirect to rune_runtime docs
        run: echo '<meta http-equiv="refresh" content="0; url=crate-docs/hotg_rune_core/index.html" />' > public/index.html
      - name: Generate HTML docs from JSON Schema
        run: |
          pip3 install json-schema-for-humans
          mkdir -p public/schema
          generate-schema-doc crates/compiler/runefile-schema.json public/schema/schema.html --copy-css --copy-js --expand-buttons
      - name: Upload API Docs
        uses: JamesIves/github-pages-deploy-action@4.1.1
        if: github.ref == 'refs/heads/master'
        with:
          branch: gh-pages
          folder: public

  web-bindings:
    name: Test Web Bindings
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            bindings/web/node_modules
          key: ${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup Rust
        run: rustup show
      - name: Install Dependencies
        run: cd bindings/web && yarn install
      - name: Run Tests
        run: cd bindings/web && yarn test
